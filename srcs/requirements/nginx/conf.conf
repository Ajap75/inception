server {

    # ------------------------------
    # 1. ACTIVATION DU SSL/HTTPS
    # ------------------------------

    # Ce serveur écoute sur le port 443 (HTTPS, sécurisé)
    # 'ssl' indique qu'on utilise un certificat (obligatoire pour Inception)
    listen 443 ssl;

    # Nom de domaine attendu pour ce serveur
    # (doit correspondre à ce que tu as mis dans /etc/hosts sur l'hôte, ex : anastruc.42.fr)
    server_name anastruc.42.fr;

    # ------------------------------
    # 2. CHEMIN RACINE DES FICHIERS À SERVIR
    # ------------------------------

    # Le dossier où NGINX va chercher les fichiers du site WordPress (images, scripts, etc.)
    # Ce dossier sera monté depuis un volume Docker pour garder les fichiers persistants
    root /var/www/wordpress;

    # Liste des fichiers d'index que NGINX doit servir si un utilisateur demande un dossier
    # (ex : si l'utilisateur visite anastruc.42.fr/blog/, il regarde s'il y a un index.php, puis index.html)
    index index.php index.html;

    # ------------------------------
    # 3. CONFIGURATION DE LA SECURISATION SSL/TLS
    # ------------------------------

    # Chemin vers le certificat public SSL (doit être généré et copié dans le conteneur)
    ssl_certificate /etc/nginx/ssl/website.crt;

    # Chemin vers la clé privée correspondant au certificat SSL
    ssl_certificate_key /etc/nginx/ssl/website.key;

    # On impose l'utilisation des protocoles TLS modernes seulement (1.2 et 1.3)
    ssl_protocols TLSv1.2 TLSv1.3;

    # --------------------------------------------
    # 4. (OPTIONNEL) REDIRECTION HTTP -> HTTPS
    # --------------------------------------------
    # Si tu ouvrais aussi le port 80 (HTTP), tu pourrais forcer la redirection vers HTTPS.
    # Ce n'est pas demandé par le sujet mais tu peux le laisser en commentaire pour montrer que tu sais le faire.
    # listen 80;
    # return 301 https://$host$request_uri;

    # --------------------------------------------
    # 5. TRAITEMENT DES REQUÊTES "CLASSIQUES"
    # --------------------------------------------
    location / {
        # 'try_files' tente de servir, dans cet ordre :
        # - le fichier demandé directement (ex : /image.png)
        # - le dossier demandé (ex : /blog/)
        # - sinon, transmet la requête à /index.php (cœur de WordPress) en ajoutant les arguments de l'URL
        #
        # Cela permet à WordPress de gérer toutes les "belles URL" (permalinks, articles, pages dynamiques)
        try_files $uri $uri/ /index.php?$args;
    }

    # --------------------------------------------
    # 6. TRAITEMENT DES FICHIERS PHP (WordPress)
    # --------------------------------------------
    location ~ \.php$ {
        # Envoie les requêtes PHP à PHP-FPM qui tourne dans le service "wordpress" (conteneur Docker)
        # "wordpress:9000" : "wordpress" est le nom du conteneur dans Docker Compose, 9000 le port de PHP-FPM
        fastcgi_pass wordpress:9000;

        # Indique à PHP-FPM le chemin complet du script à exécuter
        fastcgi_param SCRIPT_FILENAME $document_root/$fastcgi_script_name;

        # Importe tous les paramètres standard nécessaires pour l'exécution FastCGI
        include fastcgi_params;
    }

    # --------------------------------------------
    # 7. (OPTIONNEL) AUTRES SÉCURITÉS OU RÉGLAGES
    # --------------------------------------------
    # Ici tu pourrais ajouter des règles de sécurité, des headers, ou limiter l'accès à certains fichiers sensibles.
    # (Pas obligatoire pour Inception, mais bonne pratique pro)
}
